name: ü§ñ Revisi√≥n de C√≥digo con IA Claude

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  revision-ia:
    runs-on: ubuntu-latest
    name: Revisi√≥n de C√≥digo con IA

    steps:
      - name: üì• Descargar C√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç An√°lisis de C√≥digo con IA
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');

            try {
              // Obtener archivos modificados
              const changedFiles = execSync(`git diff --name-only origin/${{ github.base_ref }}...HEAD`, {encoding: 'utf8'})
                .trim().split('\n').filter(f => f);

              console.log(`Analizando ${changedFiles.length} archivos modificados`);

              let reviewBody = `## ü§ñ Revisi√≥n de C√≥digo con IA Claude\n\n`;
              reviewBody += `**Archivos Modificados:** ${changedFiles.length}\n`;
              reviewBody += `**PR:** ${context.payload.pull_request.title}\n`;
              reviewBody += `**Autor:** @${context.payload.pull_request.user.login}\n\n`;

              // An√°lisis simple
              let problemas = [];
              const fs = require('fs');

              for (const file of changedFiles) {
                if (!fs.existsSync(file)) continue;

                try {
                  const content = fs.readFileSync(file, 'utf8');
                  const lines = content.split('\n');

                  lines.forEach((line, index) => {
                    const trimmed = line.trim();
                    const lineNum = index + 1;

                    // Detecci√≥n de console.log
                    if (trimmed.includes('console.log')) {
                      problemas.push(`üîç Declaraci√≥n de debug en \`${file}:${lineNum}\` - \`${trimmed}\``);
                    }

                    // Detecci√≥n de tipo any
                    if (trimmed.includes(': any')) {
                      problemas.push(`‚ö†Ô∏è Uso de tipo any en \`${file}:${lineNum}\` - \`${trimmed}\``);
                    }

                    // Detecci√≥n de TODOs
                    if (trimmed.includes('TODO') || trimmed.includes('FIXME')) {
                      problemas.push(`üìù Deuda t√©cnica en \`${file}:${lineNum}\` - \`${trimmed}\``);
                    }
                  });
                } catch (error) {
                  console.log(`No se pudo analizar ${file}: ${error.message}`);
                }
              }

              // Construir revisi√≥n
              if (problemas.length > 0) {
                reviewBody += `### üö® Problemas Encontrados (${problemas.length})\n\n`;
                problemas.slice(0, 10).forEach(problema => {
                  reviewBody += `- ${problema}\n`;
                });
                if (problemas.length > 10) {
                  reviewBody += `\n... y ${problemas.length - 10} problemas m√°s\n`;
                }
              } else {
                reviewBody += `### ‚úÖ No Se Encontraron Problemas\n\n¬°Excelente trabajo! No se detectaron problemas obvios.\n`;
              }

              reviewBody += `\n### üìÇ Archivos\n\n`;
              changedFiles.forEach(file => {
                reviewBody += `- \`${file}\`\n`;
              });

              reviewBody += `\n---\n*ü§ñ Revisi√≥n automatizada por IA Claude*`;

              // Publicar comentario
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: reviewBody
              });

              console.log('‚úÖ ¬°Revisi√≥n publicada exitosamente!');

            } catch (error) {
              console.error('‚ùå La revisi√≥n fall√≥:', error);

              // Publicar comentario de error
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ü§ñ Revisi√≥n de C√≥digo con IA Claude\n\n‚ùå **La revisi√≥n fall√≥ debido a un error t√©cnico**\n\nPor favor revisa los logs del workflow para m√°s detalles.\n\n*ü§ñ Revisi√≥n automatizada por IA Claude*`
              });
            }