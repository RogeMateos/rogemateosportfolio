name: 📝 Revisión Rápida de Código

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  revision-rapida:
    runs-on: ubuntu-latest
    name: Análisis Rápido de Código

    steps:
      - name: 📥 Descargar Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Análisis Rápido
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');

            try {
              // Obtener archivos modificados
              const changedFiles = execSync(`git diff --name-only origin/${{ github.base_ref }}...HEAD`, {encoding: 'utf8'}).trim().split('\n').filter(f => f);

              let comment = "## 🔍 Revisión Rápida de Código\n\n";
              comment += `**Archivos modificados:** ${changedFiles.length}\n\n`;

              // Verificaciones básicas
              const jsFiles = changedFiles.filter(f => f.endsWith('.js') || f.endsWith('.jsx') || f.endsWith('.ts') || f.endsWith('.tsx'));
              const cssFiles = changedFiles.filter(f => f.endsWith('.css') || f.endsWith('.scss'));
              const configFiles = changedFiles.filter(f => f.includes('config') || f.endsWith('.json'));

              if (jsFiles.length > 0) {
                comment += `⚛️ **Archivos JavaScript/TypeScript:** ${jsFiles.length}\n`;
              }
              if (cssFiles.length > 0) {
                comment += `🎨 **Archivos de estilos:** ${cssFiles.length}\n`;
              }
              if (configFiles.length > 0) {
                comment += `⚙️ **Archivos de configuración:** ${configFiles.length}\n`;
              }

              comment += "\n### 📋 Lista de Verificación\n";
              comment += "- [ ] Las pruebas pasan correctamente\n";
              comment += "- [ ] El código sigue las convenciones del proyecto\n";
              comment += "- [ ] No hay declaraciones console.log en código de producción\n";
              comment += "- [ ] La documentación se actualizó si es necesario\n";
              comment += "- [ ] Se mantiene la seguridad de tipos\n\n";

              comment += "*🤖 Revisión rápida automatizada*";

              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });

            } catch (error) {
              console.log('Error en la revisión rápida:', error);
            }